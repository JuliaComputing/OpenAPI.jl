# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""findPetsByStatus_200_response_result

    FindPetsByStatus200ResponseResult(;
        name=nothing,
        statuses=nothing,
    )

    - name::String
    - statuses::Vector{FindPetsByStatusStatusParameterStatusesInnerInner}
"""
Base.@kwdef mutable struct FindPetsByStatus200ResponseResult <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    statuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FindPetsByStatusStatusParameterStatusesInnerInner} }

    function FindPetsByStatus200ResponseResult(name, statuses, )
        OpenAPI.validate_property(FindPetsByStatus200ResponseResult, Symbol("name"), name)
        OpenAPI.validate_property(FindPetsByStatus200ResponseResult, Symbol("statuses"), statuses)
        return new(name, statuses, )
    end
end # type FindPetsByStatus200ResponseResult

const _property_types_FindPetsByStatus200ResponseResult = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("statuses")=>"Vector{FindPetsByStatusStatusParameterStatusesInnerInner}", )
OpenAPI.property_type(::Type{ FindPetsByStatus200ResponseResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FindPetsByStatus200ResponseResult[name]))}

function check_required(o::FindPetsByStatus200ResponseResult)
    true
end

function OpenAPI.validate_property(::Type{ FindPetsByStatus200ResponseResult }, name::Symbol, val)
end
