# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Pet
A pet for sale in the pet store

    Pet(;
        name=nothing,
        status=nothing,
        id=nothing,
        photoUrls=nothing,
        tags=nothing,
        category=nothing,
    )

    - name::String
    - status::String : pet status in the store
    - id::Int64
    - photoUrls::Vector{String}
    - tags::Vector{Tag}
    - category::Category
"""
Base.@kwdef mutable struct Pet <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = nothing
    photoUrls::Union{Nothing, Vector{String}} = nothing
    tags::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Tag} }
    category = nothing # spec type: Union{ Nothing, Category }

    function Pet(name, status, id, photoUrls, tags, category, )
        OpenAPI.validate_property(Pet, Symbol("name"), name)
        OpenAPI.validate_property(Pet, Symbol("status"), status)
        OpenAPI.validate_property(Pet, Symbol("id"), id)
        OpenAPI.validate_property(Pet, Symbol("photoUrls"), photoUrls)
        OpenAPI.validate_property(Pet, Symbol("tags"), tags)
        OpenAPI.validate_property(Pet, Symbol("category"), category)
        return new(name, status, id, photoUrls, tags, category, )
    end
end # type Pet

const _property_types_Pet = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("status")=>"String", Symbol("id")=>"Int64", Symbol("photoUrls")=>"Vector{String}", Symbol("tags")=>"Vector{Tag}", Symbol("category")=>"Category", )
OpenAPI.property_type(::Type{ Pet }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Pet[name]))}

function check_required(o::Pet)
    o.name === nothing && (return false)
    o.photoUrls === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Pet }, name::Symbol, val)
    if name === Symbol("status")
        OpenAPI.validate_param(name, "Pet", :enum, val, ["available", "pending", "sold"])
    end
    if name === Symbol("id")
        OpenAPI.validate_param(name, "Pet", :format, val, "int64")
    end
end
